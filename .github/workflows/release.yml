name: Release

on: 
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  BUILD_TYPE: Release

jobs:
  release:
    runs-on: windows-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
        draft: false
        prerelease: false

  build:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            OS_TYPE: Windows
            FILE: angelscript-module.dll
          #- os: ubuntu-18.04
          #  OS_TYPE: Linux
          #  FILE: libangelscript-module.so

    steps:
    - name: Checkout repository
      if: matrix.OS_TYPE == 'Linux'
      uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
    - name: Checkout repository
      if: matrix.OS_TYPE == 'Windows'
      uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: false

    - name: Extract version
      id: version
      shell: bash
      run: |
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build server (Windows)
      if: matrix.OS_TYPE == 'Windows'
      shell: cmd
      run: |
        cd .\\tools
        .\\build-server.bat %VERSION%

    #- name: Build client (Windows)
    #  if: matrix.OS_TYPE == 'Windows'
    #  shell: bash
    #  run: |
    #    rm -rf ./build
    #    cd .\\tools
    #    .\\build-client.bat

    - name: Build (Linux)
      if: matrix.OS_TYPE == 'Linux'
      run: |
        chmod 777 ./tools/build.sh
        cd ./tools
        ./build.sh %VERSION%

    - name: Upload Release Server Assets
      id: upload_release_assets_server
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.url }}
        asset_path: ./dist/server/${{ matrix.FILE }}
        asset_name: ${{ matrix.FILE }}
        asset_content_type: application/octet-stream

    #- name: Upload Release Client Assets
    #  if: matrix.OS_TYPE == 'Windows'
    #  id: upload_release_assets_client
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    ##    upload_url: ${{ steps.get_release.outputs.upload_url }}
    #    asset_path: ./dist/client/angelscript-client-module.${{ matrix.EXT }}
    #    asset_name: angelscript-client-module.${{ matrix.EXT }}
    #    asset_content_type: application/octet-stream
