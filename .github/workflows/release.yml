name: Release

on: 
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            OS_TYPE: Windows
            EXT: dll
          #- os: ubuntu-latest
          #  OS_TYPE: Linux
          #  EXT: so

    steps:
    - uses: actions/checkout@v2

    - name: Fetch Submodules
      shell: bash
      run: |
        git submodule init
        git submodule update

    - name: Create Release
      if: matrix.OS_TYPE == 'Windows'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

    - name: Build server (Windows)
      if: matrix.OS_TYPE == 'Windows'
      shell: bash
      run: ./build-server.bat

    - name: Build client (Windows)
      if: matrix.OS_TYPE == 'Windows'
      shell: bash
      run: ./build-client.bat

    - name: Build (Linux)
      if: matrix.OS_TYPE == 'Linux'
      shell: bash
      run: |
        chmod +x ./build.sh
        ./build.sh

    - name: Upload Release Server Assets
      id: upload_release_assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/server/angelscript-module.${{ matrix.EXT }}
        asset_name: angelscript-module.${{ matrix.EXT }}
        asset_content_type: application/octet-stream

    - name: Upload Release Client Assets
      if: matrix.OS_TYPE == 'Windows'
      id: upload_release_assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/client/angelscript-client-module.${{ matrix.EXT }}
        asset_name: angelscript-client-module.${{ matrix.EXT }}
        asset_content_type: application/octet-stream
